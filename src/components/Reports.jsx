import React, { useState } from 'react';
import { BarChart3, FileText, Download, Calendar, Filter, TrendingUp, PieChart, Activity } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { useLanguage } from '../contexts/LanguageContext';
import jsPDF from 'jspdf';

const Reports = () => {
  const { t } = useLanguage();
  const [selectedReport, setSelectedReport] = useState('overview');
  const [generatingReport, setGeneratingReport] = useState(null);
  const [exportingPDF, setExportingPDF] = useState(null);

  const handleExportPDF = async (reportId, reportTitle) => {
    setExportingPDF(reportId);
    
    try {
      console.log(`Exporting ${reportTitle} to PDF...`);
      
      // Simulate processing delay
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      // Create new PDF document
      const pdf = new jsPDF();
      const pageWidth = pdf.internal.pageSize.getWidth();
      const pageHeight = pdf.internal.pageSize.getHeight();
      const margin = 20;
      const lineHeight = 7;
      let yPosition = margin;
      
      // Helper function to add text with word wrapping
      const addText = (text, fontSize = 12, isBold = false) => {
        pdf.setFontSize(fontSize);
        if (isBold) {
          pdf.setFont(undefined, 'bold');
        } else {
          pdf.setFont(undefined, 'normal');
        }
        
        const lines = pdf.splitTextToSize(text, pageWidth - 2 * margin);
        
        // Check if we need a new page
        if (yPosition + (lines.length * lineHeight) > pageHeight - margin) {
          pdf.addPage();
          yPosition = margin;
        }
        
        pdf.text(lines, margin, yPosition);
        yPosition += lines.length * lineHeight + 5;
      };
      
      // Generate PDF content based on report type
      const reportContent = generatePDFContent(reportId, reportTitle);
      
      // Add header
      addText(reportContent.title, 18, true);
      addText(`Report Number: ${reportContent.reportNumber}`, 10);
      addText(`Generated Date: ${reportContent.date}`, 10);
      addText('', 10); // Empty line
      
      // Add sections
      reportContent.sections.forEach(section => {
        addText(section.title, 14, true);
        addText(section.content, 11);
        addText('', 10); // Empty line between sections
      });
      
      // Add footer
      yPosition = pageHeight - 30;
      addText('Generated by: Auditor Management System', 9);
      addText('Report Status: Final', 9);
      
      // Save the PDF
      const fileName = `${reportTitle.replace(/\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.pdf`;
      pdf.save(fileName);
      
      console.log(`${reportTitle} PDF exported successfully!`);
    } catch (error) {
      console.error(`Error exporting ${reportTitle} to PDF:`, error);
    } finally {
      setExportingPDF(null);
    }
  };

  const generatePDFContent = (reportId, reportTitle) => {
    const currentDate = new Date().toLocaleDateString();
    const reportNumber = `RPT-${new Date().getFullYear()}-${String(Math.floor(Math.random() * 1000)).padStart(3, '0')}`;
    
    switch (reportId) {
      case 'overview':
        return {
          title: 'AUDIT OVERVIEW REPORT',
          reportNumber,
          date: currentDate,
          sections: [
            {
              title: 'EXECUTIVE SUMMARY',
              content: 'This comprehensive audit overview report provides a detailed analysis of all audit activities conducted during the reporting period. The report covers key performance indicators, departmental breakdowns, and strategic recommendations for improving audit effectiveness.'
            },
            {
              title: 'KEY FINDINGS',
              content: `• Total Audits Conducted: 12
• Completed Audits: 8
• In Progress Audits: 4
• Average Completion Time: 18 days
• Overall Compliance Rate: 94.2%`
            },
            {
              title: 'DEPARTMENT BREAKDOWN',
              content: `• Finance: 4 audits (3 completed, 1 in progress)
• IT: 3 audits (2 completed, 1 in progress)
• Operations: 2 audits (1 completed, 1 in progress)
• Procurement: 2 audits (1 completed, 1 in progress)
• HR: 1 audit (1 completed)`
            },
            {
              title: 'RECOMMENDATIONS',
              content: `1. Continue focus on high-risk areas to maximize audit impact
2. Implement automated compliance monitoring systems
3. Enhance audit documentation processes for better tracking
4. Increase cross-departmental collaboration in audit planning`
            }
          ]
        };
        
      case 'compliance':
        return {
          title: 'COMPLIANCE STATUS REPORT',
          reportNumber,
          date: currentDate,
          sections: [
            {
              title: 'COMPLIANCE OVERVIEW',
              content: 'Current compliance status across all departments and regulatory frameworks. This report provides insights into compliance gaps and areas requiring immediate attention.'
            },
            {
              title: 'COMPLIANCE METRICS',
              content: `• Overall Compliance Rate: 94.2%
• Critical Issues: 2
• Medium Issues: 5
• Low Issues: 12
• Resolved Issues This Quarter: 18`
            },
            {
              title: 'REGULATORY FRAMEWORKS',
              content: `• ISO 27001: 96% compliant
• SOX: 92% compliant
• GDPR: 98% compliant
• Internal Policies: 91% compliant`
            },
            {
              title: 'ACTION ITEMS',
              content: `1. Address critical compliance gaps in IT security protocols
2. Update SOX documentation to meet current standards
3. Conduct compliance training for operations team members
4. Implement quarterly compliance review meetings`
            }
          ]
        };
        
      case 'risk':
        return {
          title: 'RISK ASSESSMENT REPORT',
          reportNumber,
          date: currentDate,
          sections: [
            {
              title: 'RISK ANALYSIS SUMMARY',
              content: 'Comprehensive risk assessment across all business units and processes. This analysis identifies potential threats and provides strategic mitigation recommendations.'
            },
            {
              title: 'RISK CATEGORIES',
              content: `• High Risk: 3 items requiring immediate attention
• Medium Risk: 8 items for quarterly review
• Low Risk: 15 items for annual assessment`
            },
            {
              title: 'TOP RISKS IDENTIFIED',
              content: `1. Cybersecurity vulnerabilities (High Priority)
2. Regulatory compliance gaps (High Priority)
3. Operational process inefficiencies (High Priority)
4. Data privacy concerns (Medium Priority)
5. Financial reporting accuracy (Medium Priority)`
            },
            {
              title: 'MITIGATION STRATEGIES',
              content: `• Implement enhanced security protocols and monitoring
• Establish regular compliance monitoring procedures
• Initiate process automation initiatives
• Develop comprehensive staff training programs
• Create incident response and recovery plans`
            }
          ]
        };
        
      case 'performance':
        return {
          title: 'PERFORMANCE METRICS REPORT',
          reportNumber,
          date: currentDate,
          sections: [
            {
              title: 'AUDIT PERFORMANCE ANALYSIS',
              content: 'Key performance indicators and efficiency metrics for audit operations. This report evaluates the effectiveness of current audit processes and identifies improvement opportunities.'
            },
            {
              title: 'PERFORMANCE METRICS',
              content: `• Average Audit Duration: 18 days
• Audit Completion Rate: 95%
• Client Satisfaction Score: 4.2/5.0
• Cost per Audit: $12,500
• Resource Utilization: 87%`
            },
            {
              title: 'PRODUCTIVITY INDICATORS',
              content: `• Audits per Auditor (Monthly): 2.3
• Finding Resolution Rate: 89%
• Report Turnaround Time: 3.2 days
• Quality Score: 4.5/5.0
• Client Response Time: 24 hours`
            },
            {
              title: 'IMPROVEMENT RECOMMENDATIONS',
              content: `1. Invest in advanced audit automation tools
2. Enhance auditor training and certification programs
3. Implement continuous improvement processes
4. Develop performance benchmarking systems
5. Establish client feedback collection mechanisms`
            }
          ]
        };
        
      default:
        return {
          title: 'AUDIT REPORT',
          reportNumber,
          date: currentDate,
          sections: [
            {
              title: 'REPORT SUMMARY',
              content: 'This is a sample audit report generated by the Auditor Management System. The report contains comprehensive analysis and recommendations based on audit findings.'
            }
          ]
        };
    }
  };

  const handleGenerateReport = async (reportId, reportTitle) => {
    setGeneratingReport(reportId);
    
    // Simulate report generation process
    try {
      console.log(`Generating ${reportTitle}...`);
      
      // Simulate API call delay
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // Create a mock report file
      const reportContent = generateReportContent(reportId, reportTitle);
      const blob = new Blob([reportContent], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      
      // Create download link
      const link = document.createElement('a');
      link.href = url;
      link.download = `${reportTitle.replace(/\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.txt`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);
      
      console.log(`${reportTitle} generated successfully!`);
    } catch (error) {
      console.error(`Error generating ${reportTitle}:`, error);
    } finally {
      setGeneratingReport(null);
    }
  };

  const generateReportContent = (reportId, reportTitle) => {
    const currentDate = new Date().toLocaleDateString();
    const reportNumber = `RPT-${new Date().getFullYear()}-${String(Math.floor(Math.random() * 1000)).padStart(3, '0')}`;
    
    switch (reportId) {
      case 'overview':
        return `AUDIT OVERVIEW REPORT
Report Number: ${reportNumber}
Generated Date: ${currentDate}
Report Type: ${reportTitle}

EXECUTIVE SUMMARY
This comprehensive audit overview report provides a detailed analysis of all audit activities conducted during the reporting period.

KEY FINDINGS:
- Total Audits Conducted: 12
- Completed Audits: 8
- In Progress Audits: 4
- Average Completion Time: 18 days
- Overall Compliance Rate: 94.2%

DEPARTMENT BREAKDOWN:
- Finance: 4 audits (3 completed, 1 in progress)
- IT: 3 audits (2 completed, 1 in progress)
- Operations: 2 audits (1 completed, 1 in progress)
- Procurement: 2 audits (1 completed, 1 in progress)
- HR: 1 audit (1 completed)

RECOMMENDATIONS:
1. Continue focus on high-risk areas
2. Implement automated compliance monitoring
3. Enhance audit documentation processes

Generated by: Auditor Management System
Report Status: Final`;

      case 'compliance':
        return `COMPLIANCE STATUS REPORT
Report Number: ${reportNumber}
Generated Date: ${currentDate}
Report Type: ${reportTitle}

COMPLIANCE OVERVIEW
Current compliance status across all departments and regulatory frameworks.

COMPLIANCE METRICS:
- Overall Compliance Rate: 94.2%
- Critical Issues: 2
- Medium Issues: 5
- Low Issues: 12

REGULATORY FRAMEWORKS:
- ISO 27001: 96% compliant
- SOX: 92% compliant
- GDPR: 98% compliant
- Internal Policies: 91% compliant

DEPARTMENT COMPLIANCE:
- Finance: 95% compliant
- IT: 93% compliant
- Operations: 94% compliant
- HR: 96% compliant

ACTION ITEMS:
1. Address critical compliance gaps in IT security
2. Update SOX documentation
3. Conduct compliance training for operations team

Generated by: Auditor Management System
Report Status: Final`;

      case 'risk':
        return `RISK ASSESSMENT REPORT
Report Number: ${reportNumber}
Generated Date: ${currentDate}
Report Type: ${reportTitle}

RISK ANALYSIS SUMMARY
Comprehensive risk assessment across all business units and processes.

RISK CATEGORIES:
- High Risk: 3 items
- Medium Risk: 8 items
- Low Risk: 15 items

TOP RISKS IDENTIFIED:
1. Cybersecurity vulnerabilities (High)
2. Regulatory compliance gaps (High)
3. Operational process inefficiencies (High)
4. Data privacy concerns (Medium)
5. Financial reporting accuracy (Medium)

RISK MITIGATION STRATEGIES:
- Implement enhanced security protocols
- Regular compliance monitoring
- Process automation initiatives
- Staff training programs

RISK MONITORING:
- Monthly risk assessments
- Quarterly risk committee reviews
- Annual risk strategy updates

Generated by: Auditor Management System
Report Status: Final`;

      case 'performance':
        return `PERFORMANCE METRICS REPORT
Report Number: ${reportNumber}
Generated Date: ${currentDate}
Report Type: ${reportTitle}

AUDIT PERFORMANCE ANALYSIS
Key performance indicators and efficiency metrics for audit operations.

PERFORMANCE METRICS:
- Average Audit Duration: 18 days
- Audit Completion Rate: 95%
- Client Satisfaction Score: 4.2/5.0
- Cost per Audit: $12,500
- Resource Utilization: 87%

PRODUCTIVITY INDICATORS:
- Audits per Auditor (Monthly): 2.3
- Finding Resolution Rate: 89%
- Report Turnaround Time: 3.2 days
- Quality Score: 4.5/5.0

EFFICIENCY IMPROVEMENTS:
- 15% reduction in audit time through automation
- 20% improvement in documentation quality
- 12% increase in client satisfaction

RECOMMENDATIONS:
1. Invest in audit automation tools
2. Enhance auditor training programs
3. Implement continuous improvement processes

Generated by: Auditor Management System
Report Status: Final`;

      default:
        return `AUDIT REPORT
Report Number: ${reportNumber}
Generated Date: ${currentDate}
Report Type: ${reportTitle}

This is a sample audit report generated by the Auditor Management System.

Generated by: Auditor Management System
Report Status: Final`;
    }
  };

  const reportTypes = [
    {
      id: 'overview',
      title: 'Audit Overview Report',
      description: 'Comprehensive overview of all audit activities',
      icon: BarChart3,
      color: 'blue'
    },
    {
      id: 'compliance',
      title: 'Compliance Status Report',
      description: 'Current compliance status across departments',
      icon: PieChart,
      color: 'green'
    },
    {
      id: 'risk',
      title: 'Risk Assessment Report',
      description: 'Risk analysis and mitigation strategies',
      icon: Activity,
      color: 'red'
    },
    {
      id: 'performance',
      title: 'Performance Metrics Report',
      description: 'Audit performance and efficiency metrics',
      icon: TrendingUp,
      color: 'purple'
    }
  ];

  const recentReports = [
    {
      id: 1,
      name: 'Q4 2024 Audit Summary',
      type: 'Quarterly Report',
      date: '2024-01-15',
      status: 'Completed',
      size: '2.4 MB'
    },
    {
      id: 2,
      name: 'IT Security Compliance Report',
      type: 'Compliance Report',
      date: '2024-01-10',
      status: 'Completed',
      size: '1.8 MB'
    },
    {
      id: 3,
      name: 'Financial Controls Assessment',
      type: 'Risk Report',
      date: '2024-01-08',
      status: 'In Progress',
      size: '3.1 MB'
    },
    {
      id: 4,
      name: 'Department Performance Analysis',
      type: 'Performance Report',
      date: '2024-01-05',
      status: 'Completed',
      size: '1.5 MB'
    }
  ];

  const ReportCard = ({ report }) => {
    const Icon = report.icon;
    const isGenerating = generatingReport === report.id;
    const isExporting = exportingPDF === report.id;
    
    return (
      <Card 
        className={`cursor-pointer transition-all hover:shadow-md ${
          selectedReport === report.id ? 'ring-2 ring-blue-500' : ''
        }`}
        onClick={() => setSelectedReport(report.id)}
      >
        <CardContent className="p-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className={`w-12 h-12 bg-${report.color}-100 rounded-lg flex items-center justify-center`}>
                <Icon className={`h-6 w-6 text-${report.color}-600`} />
              </div>
              <div>
                <h3 className="font-semibold text-gray-900">{report.title}</h3>
                <p className="text-sm text-gray-600">{report.description}</p>
              </div>
            </div>
            <div className="flex space-x-2">
              <Button 
                variant="outline" 
                size="sm"
                disabled={isGenerating}
                onClick={(e) => {
                  e.stopPropagation();
                  handleGenerateReport(report.id, report.title);
                }}
              >
                {isGenerating ? 'Generating...' : 'Generate'}
              </Button>
              <Button 
                variant="outline" 
                size="sm"
                disabled={isExporting}
                onClick={(e) => {
                  e.stopPropagation();
                  handleExportPDF(report.id, report.title);
                }}
              >
                {isExporting ? 'Exporting...' : 'Export PDF'}
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>
    );
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">Reports & Analytics</h1>
          <p className="text-gray-600">Generate and manage audit reports</p>
        </div>
        <div className="flex space-x-3">
          <Button variant="outline">
            <Filter className="h-4 w-4 mr-2" />
            Filter Reports
          </Button>
          <Button variant="outline">
            <Calendar className="h-4 w-4 mr-2" />
            Schedule Report
          </Button>
          <Button>
            <FileText className="h-4 w-4 mr-2" />
            New Report
          </Button>
        </div>
      </div>

      {/* Report Types */}
      <div className="space-y-4">
        <h2 className="text-lg font-semibold text-gray-900">Available Report Types</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {reportTypes.map((report) => (
            <ReportCard key={report.id} report={report} />
          ))}
        </div>
      </div>

      {/* Recent Reports */}
      <div className="space-y-4">
        <div className="flex items-center justify-between">
          <h2 className="text-lg font-semibold text-gray-900">Recent Reports</h2>
          <Button variant="outline" size="sm">
            View All
          </Button>
        </div>
        
        <Card>
          <CardContent className="p-0">
            <div className="overflow-x-auto">
              <table className="w-full">
                <thead className="bg-gray-50 border-b border-gray-200">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Report Name
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Type
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Date Created
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Status
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Size
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Actions
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {recentReports.map((report) => (
                    <tr key={report.id} className="hover:bg-gray-50">
                      <td className="px-6 py-4 whitespace-nowrap">
                        <div className="flex items-center">
                          <FileText className="h-4 w-4 text-gray-400 mr-2" />
                          <span className="text-sm font-medium text-gray-900">{report.name}</span>
                        </div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {report.type}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {report.date}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${
                          report.status === 'Completed' ? 'bg-green-100 text-green-800' :
                          report.status === 'In Progress' ? 'bg-blue-100 text-blue-800' :
                          'bg-yellow-100 text-yellow-800'
                        }`}>
                          {report.status}
                        </span>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {report.size}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        <div className="flex space-x-2">
                          <Button variant="outline" size="sm">
                            View
                          </Button>
                          <Button variant="outline" size="sm">
                            <Download className="h-3 w-3" />
                          </Button>
                        </div>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Quick Stats */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Total Reports</p>
                <p className="text-2xl font-bold text-blue-600">24</p>
              </div>
              <FileText className="h-8 w-8 text-blue-600" />
            </div>
          </CardContent>
        </Card>
        
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">This Month</p>
                <p className="text-2xl font-bold text-green-600">8</p>
              </div>
              <Calendar className="h-8 w-8 text-green-600" />
            </div>
          </CardContent>
        </Card>
        
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">In Progress</p>
                <p className="text-2xl font-bold text-orange-600">3</p>
              </div>
              <Activity className="h-8 w-8 text-orange-600" />
            </div>
          </CardContent>
        </Card>
        
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Scheduled</p>
                <p className="text-2xl font-bold text-purple-600">5</p>
              </div>
              <TrendingUp className="h-8 w-8 text-purple-600" />
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Reports;

